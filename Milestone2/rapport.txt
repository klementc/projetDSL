Write a small report: 
---------------------

The xtext project is in the current repository,
you can find a few examples of valid formulas accepted by the model in the folder test.


- Documenting some well-formed rules that are worth checking and not expressed in the grammar
---------------------------------------------------------------------------------------------

At the moment, I don't see any well-formed rule that isn't expressed by the grammar itself.

- Comparing the metamodel MM2 generated out of your Xtext grammar with the metamodel MM1 defined in Milestone 1
---------------------------------------------------------------------------------------------------------------

The main difference is the disparition of the class Binop, which was here to group the binary operators but not mandatory.
In the Xtext grammar, it would just add one rule with no impact on the concrete syntax.
Apart from that and the names of the attributes, the Metamodels are similar.

- Comparing your Xtext grammar GR0 with the Xtext grammar GR1 we get if we use the metamodel defined in Milestone 1   
-------------------------------------------------------------------------------------------------------------------

There are a few differences:

* First, the syntax isn't the same, for example, in my grammar I use symbols as ^ for operator and, or | for nand. In the grammar
generated by Xtext the operators are written as we named them.

* They also generated a kind of "prefixed" notation, which avoids left recursivity.

example:
--------
And returns And:
	'And'
	'{'
		'LHS' LHS=Formula
		'RHS' RHS=Formula
	'}';

This differs from my grammar in which i write: form ^ form. (and had to deal with the recursivity problem)

* This syntax also doesn't have any notion of priority, which can cause problems (we aren't suppose to evaluate the operator 'or' before 'and' except if it has parentheses around it). And those parentheses are not present at all in that syntax.
