/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.dSLSAT.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.dSLSAT.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DSLSATFactoryImpl extends EFactoryImpl implements DSLSATFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DSLSATFactory init()
  {
    try
    {
      DSLSATFactory theDSLSATFactory = (DSLSATFactory)EPackage.Registry.INSTANCE.getEFactory(DSLSATPackage.eNS_URI);
      if (theDSLSATFactory != null)
      {
        return theDSLSATFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DSLSATFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLSATFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DSLSATPackage.FORM: return createForm();
      case DSLSATPackage.VAR: return createVar();
      case DSLSATPackage.CONST: return createConst();
      case DSLSATPackage.BI_IMPL_FORM: return createBiImplForm();
      case DSLSATPackage.IMPL_FORM: return createImplForm();
      case DSLSATPackage.OR_FORM: return createOrForm();
      case DSLSATPackage.AND_FORM: return createAndForm();
      case DSLSATPackage.NAND_FORM: return createNandForm();
      case DSLSATPackage.NOT_FORM: return createNotForm();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Form createForm()
  {
    FormImpl form = new FormImpl();
    return form;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Var createVar()
  {
    VarImpl var = new VarImpl();
    return var;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Const createConst()
  {
    ConstImpl const_ = new ConstImpl();
    return const_;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BiImplForm createBiImplForm()
  {
    BiImplFormImpl biImplForm = new BiImplFormImpl();
    return biImplForm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ImplForm createImplForm()
  {
    ImplFormImpl implForm = new ImplFormImpl();
    return implForm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OrForm createOrForm()
  {
    OrFormImpl orForm = new OrFormImpl();
    return orForm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AndForm createAndForm()
  {
    AndFormImpl andForm = new AndFormImpl();
    return andForm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NandForm createNandForm()
  {
    NandFormImpl nandForm = new NandFormImpl();
    return nandForm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotForm createNotForm()
  {
    NotFormImpl notForm = new NotFormImpl();
    return notForm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DSLSATPackage getDSLSATPackage()
  {
    return (DSLSATPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DSLSATPackage getPackage()
  {
    return DSLSATPackage.eINSTANCE;
  }

} //DSLSATFactoryImpl
